::: justify
# Introducción al CSS

¡Bienvenido a Aprender CSS!

En este capítulo se detallarán los fundamentos de CSS en fragmentos sencillos y fáciles de comprender. A lo largo de los próximos subtemas, aprenderá cómo funcionan los aspectos fundamentales de CSS y cómo utilizarlos eficazmente en sus proyectos.

Aprenderá los fundamentos de CSS, como el modelo de caja, cascada y especificidad, caja flexible, cuadrícula e índice z. Y, junto con estos fundamentos, aprenderá sobre funciones, tipos de color, gradientes, propiedades lógicas y herencia para convertirse en un desarrollador front-end integral, listo para enfrentarse a cualquier interfaz de usuario.

Cada subtema está lleno de demostraciones interactivas para que ponga a prueba sus conocimientos. Este capítulo se creó para desarrolladores de CSS, tanto principiantes como avanzados. Puede recorrer la serie de principio a fin para alcanzar una comprensión general de CSS que abarque todos los aspectos, o puede utilizarlo como referencia para temas específicos de estilo. Para aquellos que son nuevos en el desarrollo web en general.

Para desarrollar este tema vamos a construir una hoja de vida personal que la hemos iniciado en la clase de HTML5, ahora vamos a darle estilo con CSS, conforme avancemos creando el código necesario iremos aprendiendo los conceptos básicos de CSS.

# Objetivos

-   Aprender los fundamentos de CSS.

-   Aprender a utilizar CSS eficazmente en sus proyectos.

# Proyecto

-   En este tema crearemos un portafolio personal que permita dar a conocer nuestros conceptos básicos en desarrollo frontend.

# Temas

1.  Modelo de caja

2.  Cascada y especificidad

3.  Caja flexible

4.  Cuadrícula

5.  Índice z

6.  Funciones

7.  Tipos de color

8.  Gradientes

9.  Propiedades lógicas

10. Herencia

# Prerrequisitos

-   Conocimientos básicos de HTML5.

-   Editor de código.

-   Navegador web.

-   Conexión a Internet.

# Inicio

¡Vamos a empezar!

Empezamos creando una estructura básica de HTML5, para ello vamos a crear un archivo **index.html** y le agregamos el siguiente código:

``` html
<!DOCTYPE html>
<html lang="es">
<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Portafolio Personal</title>
</head>
<body>
    <header>
        <h1>Portafolio Personal</h1>
    </header>
    <main>
        <section>
            <h2>Datos Personales</h2>
            <p>Nombre: Juan Pérez</p>
            <p>Edad: 25 años</p>
            <p>Correo:
                <a href="mailto: [email protected]"> [email protected]</a>
            </p>
        </section>

        <section>
            <h2>Experiencia Laboral</h2>
            <p>Desarrollador Frontend en Empresa X</p>
            <p>Desarrollador Backend en Empresa Y</p>
        </section>

        <section>
            <h2>Estudios</h2>
            <p>Ingeniería en Sistemas</p>
            <p>Curso de Desarrollo Web</p>
        </section>

        <section>
            <h2>Proyectos</h2>
            <p>Proyecto 1</p>
            <p>Proyecto 2</p>
        </section>
    </main>
    <footer>
        <p>© 2024 Portafolio Personal</p>
    </footer>
</body>
</html>
```

Este código nos permitirá tener una estructura básica de nuestro portafolio personal, ahora vamos a darle estilo con CSS.

Ahora creamos un archivo **style.css** y le agregamos el siguiente código:

``` css
body {
    font-family: Arial, sans-serif;
    margin: 0;
    padding: 0;
}

header {
    background-color: #333;
    color: white;
    text-align: center;
    padding: 10px;
}

main {
    padding: 20px;
}

section {
    margin-bottom: 20px;
    border-bottom: 1px solid #ccc;
}

footer {
    background-color: #333;
    color: white;
    text-align: center;
    padding: 10px;
}
```

Este código nos permitirá darle estilo a nuestro portafolio personal, ahora vamos a vincular el archivo **style.css** con nuestro archivo **index.html**.
:::

![](images/paste-4.png)

El siguiente paso es vincular el archivo **style.css** con nuestro archivo **index.html**, para ello agregamos la siguiente línea de código en la sección **head** de nuestro archivo **index.html**:

``` html
<link rel="stylesheet" href="style.css">
```

Como podemos observar, hemos creado un archivo **style.css** y le hemos dado estilo a nuestro portafolio personal, ahora vamos a ver cómo se ve con el plugin **Live Preview**.

![](images/paste-5.png)

Ahora vamos a ir modificando el archivo **style.css** para darle un estilo más atractivo a nuestro portafolio personal. Y vamos conociendo los conceptos básicos de CSS.

Empezamos con el **Modelo de Caja**.

![](images/paste-6.png)

Para ello vamos a modificar el archivo **style.css** y le agregamos el siguiente código:

``` css
body { /*<1>*/
    font-family: Arial, sans-serif;
    margin: 0;
    padding: 0;
}

header { /*<2>*/
    background-color: #333;
    color: white;
    text-align: center;
    padding: 10px;
}

main { /*<3>*/
    padding: 20px;
}

section { /*<4>*/
    margin-bottom: 20px;
    border-bottom: 1px solid #ccc;
    padding: 10px;
}

footer { /*<5>*/
    background-color: #333;
    color: white;
    text-align: center;
    padding: 10px;
}

h1 { /*<6>*/
    margin: 0;
    padding: 10px;
}

h2 { /*<7>*/
    margin: 0;
    padding: 10px;
}

p { /*<8>*/
    margin: 0;
    padding: 10px;
}

a { /*<9>*/
    color: #333;
    text-decoration: none;
}

a:hover { /*<10>*/
    color: #666;
}
```

1.  Se establece la fuente y se eliminan los márgenes y rellenos predeterminados.

2.  Se establece el color de fondo, el color del texto, el alineamiento del texto y el relleno del encabezado.

3.  Se establece el relleno del contenido principal.

4.  Se establece el margen inferior, el borde inferior, el relleno y el margen interno de las secciones.

5.  Se establece el color de fondo, el color del texto, el alineamiento del texto y el relleno del pie de página.

6.  Se establece el margen y el relleno del encabezado de nivel 1.

7.  Se establece el margen y el relleno del encabezado de nivel 2.

8.  Se establece el margen y el relleno de los párrafos.

9.  Se establece el color y la decoración del enlace.

10. Se establece el color del enlace al pasar el cursor sobre él.

En el código anterior hemos aplicado el **Modelo de Caja** a los elementos de nuestro portafolio personal, ahora vamos a ver cómo se ve con el plugin **Live Preview**.

Ahora vamos a aprender sobre **Cascada y Especificidad**.

![](images/paste-7.png)

Para ello vamos a modificar el archivo **style.css** y le agregamos el siguiente código:

``` css
body {
    font-family: Arial, sans-serif;
    margin: 0;
    padding: 0;
}

header {
    background-color: #333;
    color: white;
    text-align: center;
    padding: 10px;
}

main {
    padding: 20px;
}

section {
    margin-bottom: 20px;
    border-bottom: 1px solid #ccc;
    padding: 10px;
}

footer {
    background-color: #333;
    color: white;
    text-align: center;
    padding: 10px;
}

h1 {
    margin: 0;
    padding: 10px;
}

h2 {
    margin: 0;
    padding: 10px;
}

p {
    margin: 0;
    padding: 10px;
}

a {
    color: #333;
    text-decoration: none;
}

a:hover {
    color: #666;
}

section:nth-child(odd) { /*<1>*/
    background-color: #f9f9f9;
}

section:nth-child(even) { /*<2>*/
    background-color: #f0f0f0;
}

section:last-child { /*<3>*/
    border-bottom: none;
}
```

1.  Se establece el color de fondo de las secciones impares.

2.  Se establece el color de fondo de las secciones pares.

3.  Se elimina el borde inferior de la última sección.

En el código anterior hemos aplicado **Cascada y Especificidad** a los elementos de nuestro portafolio personal, ahora vamos a ver cómo se ve con el plugin **Live Preview**.

Ahora vamos a aprender sobre **Caja Flexible**.

![](images/paste-8.png)

Para ello vamos a modificar el archivo **style.css** y le agregamos el siguiente código:

``` css
body {
    font-family: Arial, sans-serif;
    margin: 0;
    padding: 0;
}

header {
    background-color: #333;
    color: white;
    text-align: center;
    padding: 10px;
}

main {
    padding: 20px;
    display: flex; /*<1>*/
    flex-wrap: wrap; /*<2>*/
}

section {
    margin-bottom: 20px;
    border-bottom: 1px solid #ccc;
    padding: 10px;
    flex: 1; /*<3>*/
}

footer {
    background-color: #333;
    color: white;
    text-align: center;
    padding: 10px;
}

h1 {
    margin: 0;
    padding: 10px;
}

h2 {
    margin: 0;
    padding: 10px;
}

p {
    margin: 0;
    padding: 10px;
}

a {
    color: #333;
    text-decoration: none;
}

a:hover {
    color: #666;
}

section:nth-child(odd) {
    background-color: #f9f9f9;
}

section:nth-child(even) {
    background-color: #f0f0f0;
}

section:last-child {
    border-bottom: none;
}

@media (max-width: 768px) { /*<4>*/
    section {
        flex: 2;
    }
}

@media (max-width: 576px) { /*<5>*/
    section {
        flex: 3;
    }
}

@media (max-width: 320px) { /*<6>*/
    section {
        flex: 4;
    }
}
```

1.  Se establece el contenedor principal como un contenedor flexible.

2.  Se establece el contenedor principal para que los elementos se envuelvan en una nueva línea si no caben en la misma línea.

3.  Se establece la propiedad de flexibilidad de las secciones.

4.  Se establece la propiedad de flexibilidad de las secciones para pantallas de hasta 768 píxeles de ancho.

5.  Se establece la propiedad de flexibilidad de las secciones para pantallas de hasta 576 píxeles de ancho.

6.  Se establece la propiedad de flexibilidad de las secciones para pantallas de hasta 320 píxeles de ancho.

En el código anterior hemos aplicado **Caja Flexible** a los elementos de nuestro portafolio personal, ahora vamos a ver cómo se ve con el plugin **Live Preview**.

::: callout-tip
Parece que el plugin de Live Preview es bastante útil para ver los avances en tiempo real, otro plugin muy importante en desarrollo frontend es Live Server, que nos permite ver los cambios en tiempo real en un servidor local.
:::

Ahora vamos a aprender sobre **Cuadrícula**.

![](images/paste-11.png)

Para ello vamos a modificar el archivo **style.css** y le agregamos el siguiente código:

``` css
body {
    font-family: Arial, sans-serif;
    margin: 0;
    padding: 0;
}

header {
    background-color: #333;
    color: white;
    text-align: center;
    padding: 10px;
    position: relative;
}

main {
    padding: 20px;
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
    gap: 20px;
}

section {
    border-bottom: 1px solid #ccc;
    padding: 10px;
    position: relative;
}

footer {
    background-color: #333;
    color: white;
    text-align: center;
    padding: 10px;
    position: relative;
}

h1 {
    margin: 0;
    padding: 10px;
}

h2 {
    margin: 0;
    padding: 10px;
}

p {
    margin: 0;
    padding: 10px;
}

a {
    color: #333;
    text-decoration: none;
}

a:hover {
    color: #666;
}

section:nth-child(odd) {
    background-color: #f9f9f9;
}

section:nth-child(even) {
    background-color: #f0f0f0;
}

section:last-child {
    border-bottom: none;
}

@media (max-width: 768px) {
    main {
        grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));
    }
}

@media (max-width: 576px) {
    main {
        grid-template-columns: repeat(auto-fill, minmax(150px, 1fr));
    }
}

@media (max-width: 320px) {
    main {
        grid-template-columns: repeat(auto-fill, minmax(100px, 1fr));
    }
}

h1::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-color: rgba(0, 0, 0, 0.5);
    z-index: -1;
}

h2::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-color: rgba(0, 0, 0, 0.5);
    z-index: -1;
}

footer::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-color: rgba(0, 0, 0, 0.5);
    z-index: -1;
}

.grid-container { /*<1>*/
    display: grid;
    grid-template-columns: repeat(3, 1fr);
    gap: 20px;
}
```

1.  Se establece un contenedor de cuadrícula con tres columnas.

En el código anterior hemos aplicado **Cuadrícula** a los elementos de nuestro portafolio personal, ahora vamos a ver cómo se ve con el plugin **Live Preview**.

Con los conceptos que hemos aprendido hasta ahora, hemos logrado darle un estilo atractivo a nuestro portafolio personal, ahora vamos a seguir aprendiendo sobre **Índice z**.

![](images/paste-12.png)

Para ello vamos a modificar el archivo **style.css** y le agregamos el siguiente código:

``` css
body {
    font-family: Arial, sans-serif;
    margin: 0;
    padding: 0;
}

header {
    background-color: #333;
    color: white;
    text-align: center;
    padding: 10px;
    position: relative;
    z-index: 1; /*<1>*/
}

main {
    padding: 20px;
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
    gap: 20px;
}

section {
    border-bottom: 1px solid #ccc;
    padding: 10px;
    position: relative;
    z-index: 1; /*<2>*/
}

footer {
    background-color: #333;
    color: white;
    text-align: center;
    padding: 10px;
    position: relative;
    z-index: 1; /*<3>*/
}

h1 {
    margin: 0;
    padding: 10px;
}

h2 {
    margin: 0;
    padding: 10px;
}

p {
    margin: 0;
    padding: 10px;
}

a {
    color: #333;
    text-decoration: none;
}

a:hover {
    color: #666;
}

section:nth-child(odd) {
    background-color: #f9f9f9;
}

section:nth-child(even) {
    background-color: #f0f0f0;
}

section:last-child {
    border-bottom: none;
}

@media (max-width: 768px) {
    main {
        grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));
    }
}

@media (max-width: 576px) {
    main {
        grid-template-columns: repeat(auto-fill, minmax(150px, 1fr));
    }
}

@media (max-width: 320px) {
    main {
        grid-template-columns: repeat(auto-fill, minmax(100px, 1fr));
    }
}

h1::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-color: rgba(0, 0, 0, 0.5);
    z-index: -1;
}

h2::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-color: rgba(0, 0, 0, 0.5);
    z-index: -1;
}

footer::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-color: rgba(0, 0, 0, 0.5);
    z-index: -1;
}

.grid-container {
    display: grid;
    grid-template-columns: repeat(3, 1fr);
    gap: 20px;
}

.grid-container::before { /*<4>*/
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-color: rgba(0, 0, 0, 0.5);
    z-index: -1;
}

.grid-container::after { /*<5>*/
    content: 'Índice z';
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    color: white;
    font-size: 2em;
    z-index: 1;
}

.grid-container:hover::after { /*<6>*/
    color: #333;
}
```

1.  Se establece el índice z del encabezado.

2.  Se establece el índice z de las secciones.

3.  Se establece el índice z del pie de página.

4.  Se establece un fondo semitransparente para el contenedor de cuadrícula.

5.  Se establece un texto en el centro del contenedor de cuadrícula.

6.  Se establece el color del texto al pasar el cursor sobre el contenedor de cuadrícula.

En el código anterior hemos aplicado **Índice z** a los elementos de nuestro portafolio personal, ahora vamos a ver cómo se ve con el plugin **Live Preview**.

Con los conceptos que hemos aprendido hasta ahora, hemos logrado darle un estilo atractivo a nuestro portafolio personal, ahora vamos a seguir aprendiendo sobre **Funciones**.![](images/paste-13.png)

Para ello vamos a modificar el archivo **style.css** y le agregamos el siguiente código:

``` css
body {
    font-family: Arial, sans-serif;
    margin: 0;
    padding: 0;
}

header {
    background-color: #333;
    color: white;
    text-align: center;
    padding: 10px;
    position: relative;
    z-index: 1;
}

main {
    padding: 20px;
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
    gap: 20px;
}

section {
    border-bottom: 1px solid #ccc;
    padding: 10px;
    position: relative;
    z-index: 1;
}

footer {
    background-color: #333;
    color: white;
    text-align: center;
    padding: 10px;
    position: relative;
    z-index: 1;
}

h1 {
    margin: 0;
    padding: 10px;
}

h2 {
    margin: 0;
    padding: 10px;
}

p {
    margin: 0;
    padding: 10px;
}

a {
    color: #333;
    text-decoration: none;
}

a:hover {
    color: #666;
}

section:nth-child(odd) {
    background-color: #f9f9f9;
}

section:nth-child(even) {
    background-color: #f0f0f0;
}

section:last-child {
    border-bottom: none;
}

@media (max-width: 768px) {
    main {
        grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));
    }
}

@media (max-width: 576px) {
    main {
        grid-template-columns: repeat(auto-fill, minmax(150px, 1fr));
    }
}

@media (max-width: 320px) {
    main {
        grid-template-columns: repeat(auto-fill, minmax(100px, 1fr));
    }
}

h1::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-color: rgba(0, 0, 0, 0.5);
    z-index: -1;
}

h2::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-color: rgba(0, 0, 0, 0.5);
    z-index: -1;
}

footer::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-color: rgba(0, 0, 0, 0.5);
    z-index: -1;
}

.grid-container {
    display: grid;
    grid-template-columns: repeat(3, 1fr);
    gap: 20px;
}

.grid-container::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-color: rgba(0, 0, 0, 0.5);
    z-index: -1;
}

.grid-container::after {
    content: 'Índice z';
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    color: white;
    font-size: 2em;
    z-index: 1;
}

.grid-container:hover::after {
    color: #333;
}

body::before {
    content: '';
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-image: url('images/background.jpg');
    background-size: cover;
    z-index: -1;
}

body::after {
    content: '';
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-color: rgba(0, 0, 0, 0.5);
    z-index: -1;
}

body::before, body::after {
    mix-blend-mode: overlay;
}
```

En el código anterior hemos aplicado **Funciones** a los elementos de nuestro portafolio personal, ahora vamos a ver cómo se ve con el plugin **Live Preview**.

Ahora vamos a aprender sobre **Tipos de Color**.

![](images/paste-15.png)

Para ello vamos a modificar el archivo **style.css** y le agregamos el siguiente código:

``` css
:root {
    --primary-color: #333;
    --secondary-color: #666;
    --background-color: #f9f9f9;
    --text-color: #333;
    --hover-color: #666;
}

body {
    font-family: Arial, sans-serif;
    margin: 0;
    padding: 0;
    background-color: var(--background-color);
}

header, footer {
    background-color: var(--primary-color);
    color: white;
    text-align: center;
    padding: 10px;
    position: relative;
    z-index: 1;
}

main {
    padding: 20px;
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
    gap: 20px;
}

section {
    border-bottom: 1px solid #ccc;
    padding: 10px;
    position: relative;
    z-index: 1;
}

h1, h2, p {
    margin: 0;
    padding: 10px;
}

a {
    color: var(--text-color);
    text-decoration: none;
}

a:hover {
    color: var(--hover-color);
}

section:nth-child(odd), section:nth-child(even) {
    background-color: var(--background-color);
}

section:last-child {
    border-bottom: none;
}

@media (max-width: 768px) {
    main {
        grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));
    }
}

@media (max-width: 576px) {
    main {
        grid-template-columns: repeat(auto-fill, minmax(150px, 1fr));
    }
}

@media (max-width: 320px) {
    main {
        grid-template-columns: repeat(auto-fill, minmax(100px, 1fr));
    }
}

h1::before, h2::before, footer::before, .grid-container::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-color: rgba(0, 0, 0, 0.5);
    z-index: -1;
}

.grid-container::after {
    content: 'Índice z';
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    color: white;
    font-size: 2em;
    z-index: 1;
}

.grid-container:hover::after {
    color: var(--primary-color);
}

body::before, body::after {
    content: '';
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    z-index: -1;
}

body::before {
    background-image: url('images/background.jpg');
    background-size: cover;
}

body::after {
    background-color: rgba(0, 0, 0, 0.5);
}

body::before, body::after {
    mix-blend-mode: overlay;
}

body {
    background-color: hsl(0, 0%, 100%);
}

header, footer {
    background-color: hsl(0, 0%, 20%);
}

section:nth-child(odd) {
    background-color: hsl(0, 0%, 97%);
}

section:nth-child(even) {
    background-color: hsl(0, 0%, 94%);
}

a {
    color: hsl(0, 0%, 20%);
}

a:hover {
    color: hsl(0, 0%, 40%);
}

.grid-container::before {
    background-color: hsl(0, 0%, 0%);
}
```

En el código anterior hemos aplicado **Tipos de Color** a los elementos de nuestro portafolio personal, ahora vamos a ver cómo se ve con el plugin **Live Preview**.

Ahora vamos a aprender sobre **Gradientes**.

![](images/paste-16.png)

Para ello vamos a modificar el archivo **style.css** y le agregamos el siguiente código:

``` css
:root {
    --primary-color: #333;
    --secondary-color: #666;
    --background-color: #f9f9f9;
    --text-color: #333;
    --hover-color: #666;
}

body {
    font-family: Arial, sans-serif;
    margin: 0;
    padding: 0;
    background-color: var(--background-color);
}

header, footer {
    background-image: linear-gradient(to right, var(--primary-color), var(--secondary-color));
    color: white;
    text-align: center;
    padding: 10px;
    position: relative;
    z-index: 1;
}

main {
    padding: 20px;
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
    gap: 20px;
}

section {
    border-bottom: 1px solid #ccc;
    padding: 10px;
    position: relative;
    z-index: 1;
}

h1, h2, p {
    margin: 0;
    padding: 10px;
}

a {
    color: var(--text-color);
    text-decoration: none;
}

a:hover {
    color: var(--hover-color);
}

section:nth-child(odd), section:nth-child(even) {
    background-image: linear-gradient(to right, var(--background-color), var(--secondary-color));
}

section:last-child {
    border-bottom: none;
}

@media (max-width: 768px) {
    main {
        grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));
    }
}

@media (max-width: 576px) {
    main {
        grid-template-columns: repeat(auto-fill, minmax(150px, 1fr));
    }
}

@media (max-width: 320px) {
    main {
        grid-template-columns: repeat(auto-fill, minmax(100px, 1fr));
    }
}

h1::before, h2::before, footer::before, .grid-container::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-color: rgba(0, 0, 0, 0.5);
    z-index: -1;
}

.grid-container::after {
    content: 'Índice z';
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    color: white;
    font-size: 2em;
    z-index: 1;
}

.grid-container:hover::after {
    color: var(--primary-color);
}

body::before, body::after {
    content: '';
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    z-index: -1;
}

body::before {
    background-image: url('images/background.jpg');
    background-size: cover;
}

body::after {
    background-color: rgba(0, 0, 0, 0.5);
}

body::before, body::after {
    mix-blend-mode: overlay;
}

body {
    background-color: hsl(0, 0%, 100%);
}

header, footer {
    background-color: hsl(0, 0%, 20%);
}

section:nth-child(odd) {
    background-color: hsl(0, 0%, 97%);
}

section:nth-child(even) {
    background-color: hsl(0, 0%, 94%);
}

a {
    color: hsl(0, 0%, 20%);
}

a:hover {
    color: hsl(0, 0%, 40%);
}

.grid-container::before {
    background-color: hsl(0, 0%, 0%);
}
```

En el código anterior hemos aplicado **Gradientes** a los elementos de nuestro portafolio personal, ahora vamos a ver cómo se ve con el plugin **Live Preview**.

Ahora vamos a aprender sobre **Propiedades Lógicas**.

![](images/paste-17.png)

Para ello vamos a modificar el archivo **style.css** y le agregamos el siguiente código:

``` css
:root {
    --primary-color: #333;
    --secondary-color: #666;
    --background-color: #f9f9f9;
    --text-color: #333;
    --hover-color: #666;
}

body {
    font-family: Arial, sans-serif;
    margin: 0;
    padding: 0;
    background-color: var(--background-color);
}

header, footer {
    background-image: linear-gradient(to inline-end, var(--primary-color), var(--secondary-color));
    color: white;
    text-align: center;
    padding: 10px;
    position: relative;
    z-index: 1;
}

main {
    padding: 20px;
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
    gap: 20px;
}

section {
    border-bottom: 1px solid #ccc;
    padding: 10px;
    position: relative;
    z-index: 1;
}

h1, h2, p {
    margin: 0;
    padding: 10px;
}

a {
    color: var(--text-color);
    text-decoration: none;
}

a:hover {
    color: var(--hover-color);
}

section:nth-child(odd), section:nth-child(even) {
    background-image: linear-gradient(to inline-end, var(--background-color), var(--secondary-color));
}

section:last-child {
    border-bottom: none;
}

@media (max-width: 768px) {
    main {
        grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));
    }
}

@media (max-width: 576px) {
    main {
        grid-template-columns: repeat(auto-fill, minmax(150px, 1fr));
    }
}

@media (max-width: 320px) {
    main {
        grid-template-columns: repeat(auto-fill, minmax(100px, 1fr));
    }
}

h1::before, h2::before, footer::before, .grid-container::before {
    content: '';
    position: absolute;
    top: 0;
    inline-start: 0;
    width: 100%;
    height: 100%;
    background-color: rgba(0, 0, 0, 0.5);
    z-index: -1;
}

.grid-container::after {
    content: 'Índice z';
    position: absolute;
    top: 50%;
    inline-start: 50%;
    transform: translate(-50%, -50%);
    color: white;
    font-size: 2em;
    z-index: 1;
}

.grid-container:hover::after {
    color: var(--primary-color);
}

body::before, body::after {
    content: '';
    position: fixed;
    top: 0;
    inline-start: 0;
    width: 100%;
    height: 100%;
    z-index: -1;
}

body::before {
    background-image: url('images/background.jpg');
    background-size: cover;
}

body::after {
    background-color: rgba(0, 0, 0, 0.5);
}

body::before, body::after {
    mix-blend-mode: overlay;
}

body {
    background-color: hsl(0, 0%, 100%);
}

header, footer {
    background-color: hsl(0, 0%, 20%);
}

section:nth-child(odd) {
    background-color: hsl(0, 0%, 97%);
}

section:nth-child(even) {
    background-color: hsl(0, 0%, 94%);
}

a {
    color: hsl(0, 0%, 20%);
}

a:hover {
    color: hsl(0, 0%, 40%);
}

.grid-container::before {
    background-color: hsl(0, 0%, 0%);
}
```

En el código anterior hemos aplicado **Propiedades Lógicas** a los elementos de nuestro portafolio personal, ahora vamos a ver cómo se ve con el plugin **Live Preview**.

Con los conceptos que hemos aprendido hasta ahora, hemos logrado darle un estilo atractivo a nuestro portafolio personal, ahora vamos a seguir aprendiendo sobre **Variables**.

![](images/paste-18.png)

Para ello vamos a modificar el archivo **style.css** y le agregamos el siguiente código:

``` css
:root {
    --primary-color: #333;
    --secondary-color: #666;
    --background-color: #f9f9f9;
    --text-color: #333;
    --hover-color: #666;
    --overlay-color: rgba(0, 0, 0, 0.5);
    --body-background-image: url('images/background.jpg');
    --body-blend-mode: overlay;
}

body {
    font-family: Arial, sans-serif;
    margin: 0;
    padding: 0;
    background-color: var(--background-color);
    background-image: var(--body-background-image);
    background-size: cover;
    mix-blend-mode: var(--body-blend-mode);
}

header, footer {
    background-image: linear-gradient(to inline-end, var(--primary-color), var(--secondary-color));
    color: white;
    text-align: center;
    padding: 10px;
    position: relative;
    z-index: 1;
    background-color: hsl(0, 0%, 20%);
}

main {
    padding: 20px;
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
    gap: 20px;
}

section {
    border-bottom: 1px solid #ccc;
    padding: 10px;
    position: relative;
    z-index: 1;
    background-color: hsl(0, 0%, 97%);
}

h1, h2, p {
    margin: 0;
    padding: 10px;
}

a {
    color: var(--text-color);
    text-decoration: none;
}

a:hover {
    color: var(--hover-color);
}

section:nth-child(odd), section:nth-child(even) {
    background-image: linear-gradient(to inline-end, var(--background-color), var(--secondary-color));
}

section:last-child {
    border-bottom: none;
}

@media (max-width: 768px) {
    main {
        grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));
    }
}

@media (max-width: 576px) {
    main {
        grid-template-columns: repeat(auto-fill, minmax(150px, 1fr));
    }
}

@media (max-width: 320px) {
    main {
        grid-template-columns: repeat(auto-fill, minmax(100px, 1fr));
    }
}

h1::before, h2::before, footer::before, .grid-container::before {
    content: '';
    position: absolute;
    top: 0;
    inline-start: 0;
    width: 100%;
    height: 100%;
    background-color: var(--overlay-color);
    z-index: -1;
}

.grid-container::after {
    content: 'Índice z';
    position: absolute;
    top: 50%;
    inline-start: 50%;
    transform: translate(-50%, -50%);
    color: white;
    font-size: 2em;
    z-index: 1;
}

.grid-container:hover::after {
    color: var(--primary-color);
}

body::before, body::after {
    content: '';
    position: fixed;
    top: 0;
    inline-start: 0;
    width: 100%;
    height: 100%;
    z-index: -1;
}

body::after {
    background-color: var(--overlay-color);
}

body {
    background-color: hsl(0, 0%, 100%);
}

section:nth-child(odd) {
    background-color: hsl(0, 0%, 97%);
}

section:nth-child(even) {
    background-color: hsl(0, 0%, 94%);
}

a {
    color: hsl(0, 0%, 20%);
}

a:hover {
    color: hsl(0, 0%, 40%);
}

.grid-container::before {
    background-color: hsl(0, 0%, 0%);
}
```

En el código anterior hemos aplicado **Variables** a los elementos de nuestro portafolio personal, ahora vamos a ver cómo se ve con el plugin **Live Preview**.

Existen muchos conceptos que podemos incorporar, pero el uso de Frameworks como Bootstrap, Materialize, Bulma, entre otros, nos facilitan el trabajo y nos permiten tener un diseño responsivo y atractivo en poco tiempo.

Vamos a utilizar el mismo proyecto la base del acrhivo **index.html** y **style.css**, y vamos a agregar Bootstrap. Y comprenderas porqué es importante el uso de Frameworks.

![](images/paste-19.png)

Para ello vamos a modificar el archivo **index.html** y le agregamos el siguiente código:

``` html
<!DOCTYPE html>
<html lang="es">
<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Portafolio Personal</title>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH" crossorigin="anonymous">">
    <link rel="stylesheet" href="style.css">
</head>
<body>
    <header>
        <h1>Portafolio Personal</h1>
    </header>
    <main class="container">
        <section>
            <h2>Proyecto 1</h2>
            <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nullam nec purus nec nunc tincidunt tincidunt. Nullam nec purus nec nunc tincidunt tincidunt.</p>
            <a href="#">Ver más</a>
        </section>
        <section>
            <h2>Proyecto 2</h2>
            <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nullam nec purus nec nunc tincidunt tincidunt. Nullam nec purus nec nunc tincidunt tincidunt.</p>
            <a href="#">Ver más</a>
        </section>
        <section>
            <h2>Proyecto 3</h2>
            <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nullam nec purus nec nunc tincidunt tincidunt. Nullam nec purus nec nunc tincidunt tincidunt.</p>
            <a href="#">Ver más</a>
        </section>
    </main>
    <footer>
        <p>&copy; 2024 Portafolio Personal</p>
    </footer>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js" integrity="sha384-YvpcrYf0tY3lHB60NNkmXc5s9fDVZLESaAA55NDzOxhy9GkcIdslK1eN7N6jIeHz" crossorigin="anonymous"></script>
</body>
</html>
```

En el código anterior hemos agregado Bootstrap al proyecto, ahora vamos a modificar el archivo **style.css** y le agregamos el siguiente código:

``` css

body { font-family: Arial, sans-serif; margin: 0; padding: 0; }

header { background-color: #333; color: white; text-align: center; padding: 10px; }

main { padding: 20px; }

section { margin-bottom: 20px; border-bottom: 1px solid #ccc; padding: 10px; }

footer { background-color: #333; color: white; text-align: center; padding: 10px; }

h1 { margin: 0; padding: 10px; }

h2 { margin: 0; padding: 10px; }

p { margin: 0; padding: 10px; }

a { color: #333; text-decoration: none; }

a:hover { color: #666; }

section:nth-child(odd) { background-color: #f9f9f9; }

section:nth-child(even) { background-color: #f0f0f0; }

section:last-child { border-bottom: none; }

@media (max-width: 768px) { section { flex: 2; } }

@media (max-width: 576px) { section { flex: 3; } }

@media (max-width: 320px) { section { flex: 4; } }
```

En el código anterior hemos aplicado **Bootstrap** a los elementos de nuestro portafolio personal, ahora vamos a ver cómo se ve con el plugin **Live Preview**.

Con los conceptos que hemos aprendido hasta ahora, hemos logrado darle un estilo atractivo a nuestro portafolio personal, ahora vamos a seguir aprendiendo sobre **Bootstrap**.

![](images/paste-20.png)

Para ello vamos a modificar el archivo **index.html** y le agregamos el siguiente código:

``` html
<!DOCTYPE html>
<html lang="es">
<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Portafolio Personal</title>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH" crossorigin="anonymous">">
    <link rel="stylesheet" href="style.css">
</head>
<body>
    <header>
        <h1>Portafolio Personal</h1>
    </header>
    <main class="container">
        <section class="row">
            <div class="col">
                <h2>Proyecto 1</h2>
                <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nullam nec purus nec nunc tincidunt tincidunt. Nullam nec purus nec nunc tincidunt tincidunt.</p>
                <a href="#">Ver más</a>
            </div>
            <div class="col">
                <h2>Proyecto 2</h2>
                <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nullam nec purus nec nunc tincidunt tincidunt. Nullam nec purus nec nunc tincidunt tincidunt.</p>
                <a href="#">Ver más</a>
            </div>
            <div class="col">
                <h2>Proyecto 3</h2>
                <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nullam nec purus nec nunc tincidunt tincidunt. Nullam nec purus nec nunc tincidunt tincidunt.</p>
                <a href="#">Ver más</a>
            </div>
        </section>
    </main>
    <footer>
        <p>&copy; 2024 Portafolio Personal</p>
    </footer>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js" integrity="sha384-YvpcrYf0tY3lHB60NNkmXc5s9fDVZLESaAA55NDzOxhy9GkcIdslK1eN7N6jIeHz" crossorigin="anonymous"></script>
</body>
</html>
```

En el código anterior hemos aplicado **Bootstrap** a los elementos de nuestro portafolio personal, ahora vamos a ver cómo se ve con el plugin **Live Preview**.

Con los conceptos que hemos aprendido hasta ahora, hemos logrado darle un estilo atractivo a nuestro portafolio personal, ahora vamos a seguir aprendiendo sobre **Materialize**.

![](images/paste-20.png)

Para ello vamos a modificar el archivo **index.html** y le agregamos el siguiente código:

![](images/paste-21.png)

``` html
<!DOCTYPE html>
<html lang="es">
<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Portafolio Personal</title>
    <!-- Compiled and minified CSS -->
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/materialize/1.0.0/css/materialize.min.css">
</head>
<body>
    <header>
        <h1>Portafolio Personal</h1>
    </header>
    <main class="container">
        <section>
            <h2>Proyecto 1</h2>
            <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nullam nec purus nec nunc tincidunt tincidunt. Nullam nec purus nec nunc tincidunt tincidunt.</p>
            <a href="#">Ver más</a>
        </section>
        <section>
            <h2>Proyecto 2</h2>
            <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nullam nec purus nec nunc tincidunt tincidunt. Nullam nec purus nec nunc tincidunt tincidunt.</p>
            <a href="#">Ver más</a>
        </section>
        <section>
            <h2>Proyecto 3</h2>
            <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nullam nec purus nec nunc tincidunt tincidunt. Nullam nec purus nec nunc tincidunt tincidunt.</p>
            <a href="#">Ver más</a>
        </section>
    </main>
    <footer>
        <p>&copy; 2024 Portafolio Personal</p>
    </footer>
    <!-- Compiled and minified JavaScript -->
    <script src="https://cdnjs.cloudflare.com/ajax/libs/materialize/1.0.0/js/materialize.min.js"></script>
</body>
</html>
```

En el código anterior hemos aplicado **Materialize** a los elementos de nuestro portafolio personal, ahora vamos a ver cómo se ve con el plugin **Live Preview**.

Con los conceptos que hemos aprendido hasta ahora, hemos logrado darle un estilo atractivo a nuestro portafolio personal, ahora vamos a seguir aprendiendo sobre **Bulma**.

![](images/paste-22.png)

Para ello vamos a modificar el archivo **index.html** y le agregamos el siguiente código:

![](images/paste-23.png)

``` html
<!DOCTYPE html>
<html lang="es">
<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link
    rel="stylesheet"
    href="https://cdn.jsdelivr.net/npm/bulma@1.0.2/css/bulma.min.css"
  >
</head>
<body>
    <header>
        <h1>Portafolio Personal</h1>
    </header>
    <main class="container">
        <section>
            <h2>Proyecto 1</h2>
            <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nullam nec purus nec nunc tincidunt tincidunt. Nullam nec purus nec nunc tincidunt tincidunt.</p>
            <a href="#">Ver más</a>
        </section>
        <section>
            <h2>Proyecto 2</h2>
            <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nullam nec purus nec nunc tincidunt tincidunt. Nullam nec purus nec nunc tincidunt tincidunt.</p>
            <a href="#">Ver más</a>
        </section>
        <section>
            <h2>Proyecto 3</h2>
            <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nullam nec purus nec nunc tincidunt tincidunt. Nullam nec purus nec nunc tincidunt tincidunt.</p>
            <a href="#">Ver más</a>
        </section>
    </main>
    <footer>
        <p>&copy; 2024 Portafolio Personal</p>
    </footer>
</body>
</html>
```

En el código anterior hemos aplicado **Bulma** a los elementos de nuestro portafolio personal, ahora vamos a ver cómo se ve con el plugin **Live Preview**.

De esta forma hemos trabajado con los conceptos de **CSS** y **Frameworks** para darle un estilo atractivo a nuestro portafolio personal.

Si queremos profundizar en cada uno de los conceptos, podemos hacerlo en la documentación oficial de cada uno de ellos.