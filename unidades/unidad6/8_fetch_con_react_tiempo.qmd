:::{.justify}
# Fetch con React para obtener el listado de productos

En esta sección vamos a ver cómo podemos hacer un fetch con React para obtener un listado de productos desde una API.

## Crear la aplicación

Para crear la aplicación vamos a utilizar el siguiente comando:

``` bash
npm create vite@latest .
```

## Crear el componente

Vamos a crear el directorio **components** y dentro de él el archivo **Products.jsx**.

``` jsx
import React, { useState, useEffect } from 'react';

const Products = () => {
  const [products, setProducts] = useState([]);

  useEffect(() => {
    fetch('https://fakestoreapi.com/products')
      .then((response) => response.json())
      .then((data) => setProducts(data));
  }, []);

  return (
    <div>
      <h1>Productos</h1>
      <ul>
        {products.map((product) => (
          <li key={product.id}>{product.title}</li>
        ))}
      </ul>
    </div>
  );
};

export default Products;
```

En este componente estamos utilizando el hook **useState** para guardar el listado de productos y el hook **useEffect** para hacer el fetch a la API.

## Importar el componente

Vamos a importar el componente **Products** en **App.jsx**.

``` jsx
import React from 'react';

import Products from './components/Products';

const App = () => {
  return (
    <div>
      <Products />
    </div>
  );
};

export default App;
```

En el código anterior estamos importando el componente **Products** y lo estamos renderizando en **App**.

## Ejecutar la aplicación

Para ejecutar la aplicación vamos a correr el siguiente comando.

``` bash
npm run dev
```

Ahora vamos a abrir el navegador en la dirección **http://localhost:3000** y vamos a ver el listado de productos.

:::{.center}
![](images/paste-2.png){width=70%}
:::

## Conclusiones

En esta sección hemos visto cómo podemos hacer un fetch con React para obtener un listado de productos desde una API.
:::